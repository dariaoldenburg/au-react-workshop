{"version":3,"sources":["ui/Cell.tsx","ChatAPI.ts","ui/Row.tsx","UsersList.tsx","ui/Button.tsx","MessagesListThread.tsx","MessagesList.tsx","MessageBox.tsx","Chat.tsx","App.tsx","index.tsx"],"names":["Cell","props","react_default","a","createElement","className","classNames","Object","defineProperty","Cell--header","header","Cell--padded","padded","Cell--scrollable","scrollable","concat","textAlign","style","width","widthPercentage","height","children","defaultProps","uuid","currentUser","undefined","users","users$","ReplaySubject","messages","messages$","_setUsers","_users","next","_setMessages","_messages","_addMessage","message","nextMessages","toConsumableArray","parentMessage","parentMessageId","find","m","id","index","indexOf","objectSpread","submessages","content","createdAt","Date","toString","user","push","login","Promise","resolve","reject","setTimeout","_addUser","name","logout","filter","u","color","senior","Row","UsersList","map","key","fontWeight","Button","_classNames","onClick","variant","disabled","type","fullWidth","SubmessagesList","_ref","extended","marginLeft","MessagesListThread_MessagesListThread","Button_Button","length","MessagesListThread","_React$PureComponent","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","handleShowMore","setState","inherits","createClass","value","_this$props","onReplyClick","showSubmessages","date","cursor","toLocaleTimeString","MessagesListThread_SubmessagesList","React","PureComponent","MessagesList","Fragment","MessageBox","onChange","onSubmit","replyTo","onReplyClear","event","preventDefault","handleSubmit","background","margin","padding","target","handleChange","Chat","channelName","onlineUsers","onlineUsersLoading","messagesLoading","currentMessage","_subscriptions","handleSendMessage","_this$state","handleTextAreaOnChange","handleSignIn","prompt","then","alert","handleSignOut","handleReplyClick","handleReplyClear","_this2","asObservable","subscribe","forEach","s","unsubscribe","_this$state2","Row_Row","Cell_Cell","UsersList_UsersList","MessageBox_MessageBox","App","Chat_Chat","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.64b04b24.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './Cell.css';\n\ninterface CellProps {\n  header: boolean;\n  padded: boolean;\n  scrollable?: boolean;\n  textAlign: 'left' | 'center' | 'right';\n  widthPercentage: number;\n  height?: number;\n  children?: React.ReactNode;\n}\n\nexport function Cell(props: CellProps) {\n  return (\n    <div\n      className={classNames('Cell', {\n        'Cell--header': props.header,\n        'Cell--padded': props.padded,\n        'Cell--scrollable': props.scrollable,\n        [`Cell--textAlign-${props.textAlign}`]: props.textAlign\n      })}\n      style={{\n        width: `${props.widthPercentage}%`,\n        height: props.height\n      }}\n    >\n      {props.children}\n    </div>\n  );\n}\n\nCell.defaultProps = {\n  header: false,\n  padded: true,\n  scrollable: false,\n  textAlign: 'left'\n};\n","import { ReplaySubject } from 'rxjs';\n\nexport interface User {\n  id: number;\n  name: string;\n  color?: string;\n  senior?: boolean;\n}\n\nexport interface Message {\n  id: number;\n  createdAt: string;\n  content: string;\n  user?: User;\n  submessages?: Message[];\n}\n\nlet uuid = 100;\nlet currentUser: User | undefined = undefined;\n\nlet users: User[] = [];\nconst users$ = new ReplaySubject<User[]>(1);\nlet messages: Message[] = [];\nconst messages$ = new ReplaySubject<Message[]>(1);\n\nfunction _setUsers(_users: User[]) {\n  users = _users;\n  users$.next(_users);\n}\n\nfunction _setMessages(_messages: Message[]) {\n  messages = _messages;\n  messages$.next(_messages);\n}\n\nfunction _addMessage(message: { content: string; parentMessageId?: number }) {\n  const nextMessages = [...messages];\n  const parentMessage = message.parentMessageId\n    ? nextMessages.find(m => m.id === message.parentMessageId)\n    : undefined;\n\n  if (parentMessage) {\n    const index = nextMessages.indexOf(parentMessage);\n    nextMessages[index] = {\n      ...parentMessage,\n      submessages: [\n        ...(parentMessage.submessages || []),\n        {\n          id: ++uuid,\n          content: message.content,\n          createdAt: new Date().toString(),\n          user: currentUser\n        }\n      ]\n    };\n  } else {\n    nextMessages.push({\n      id: ++uuid,\n      content: message.content,\n      createdAt: new Date().toString(),\n      user: currentUser,\n      submessages: []\n    });\n  }\n\n  _setMessages(nextMessages);\n}\n\nfunction _addUser(user: User) {\n  _setUsers([...users, user]);\n}\n\nfunction _removeUser(user: User) {\n  _setUsers(users.filter(u => u.id !== user.id));\n}\n\nfunction _init() {\n  setTimeout(() => {\n    _setUsers([\n      { id: ++uuid, name: 'geron' },\n      { id: ++uuid, name: 'hit_fm', color: 'pink', senior: true },\n      { id: ++uuid, name: 'kasienka2' },\n      { id: ++uuid, name: 'Lady_Ann_' },\n      { id: ++uuid, name: 'MalWINKaaa', color: 'orange', senior: true }\n    ]);\n\n    _setMessages([\n      {\n        id: ++uuid,\n        createdAt: new Date().toString(),\n        content: '@here ślimak',\n        user: users[1],\n        submessages: []\n      },\n      {\n        id: ++uuid,\n        createdAt: new Date().toString(),\n        content: 'mingwok ktoś?',\n        user: users[4],\n        submessages: [\n          {\n            id: ++uuid,\n            createdAt: new Date().toString(),\n            content: ':+1:',\n            user: users[2]\n          },\n          {\n            id: ++uuid,\n            createdAt: new Date().toString(),\n            content: '1x makaron smażony z kurczakiem',\n            user: users[3]\n          },\n          {\n            id: ++uuid,\n            createdAt: new Date().toString(),\n            content: '@kasienka2 a jaki makaron?',\n            user: users[4]\n          }\n        ]\n      }\n    ]);\n  }, 1000);\n}\n\n_init();\n\nexport function fetchMessages() {\n  return messages$.asObservable();\n}\n\nexport function fetchOnlineUsers() {\n  return users$.asObservable();\n}\n\nexport function createMessage(message: {\n  content: string;\n  parentMessageId?: number;\n}) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      _addMessage(message);\n      resolve();\n    }, 500);\n  });\n}\n\nexport function login(user: {\n  name: string;\n  color?: string;\n  senior?: boolean;\n}) {\n  return new Promise<User>((resolve, reject) => {\n    setTimeout(() => {\n      currentUser = { id: ++uuid, ...user };\n\n      _addUser(currentUser);\n      _addMessage({\n        content: `** przychodzi ${currentUser.name}...`\n      });\n\n      resolve(currentUser);\n    }, 500);\n  });\n}\n\nexport function logout() {\n  if (!currentUser) {\n    return Promise.resolve();\n  }\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (currentUser) {\n        _removeUser(currentUser);\n        _addMessage({\n          content: `** odchodzi ${currentUser.name}...`\n        });\n      }\n      resolve();\n    }, 500);\n  });\n}\n","import React from 'react';\nimport './Row.css';\n\ninterface RowProps {\n  children?: React.ReactNode;\n}\n\nexport function Row(props: { children?: React.ReactNode }) {\n  return <div className=\"Row\">{props.children}</div>;\n}\n","import React from 'react';\nimport { User } from './ChatAPI';\nimport './UsersList.css';\n\ninterface UsersListProps {\n  users: User[];\n}\n\nexport function UsersList(props: UsersListProps) {\n  return (\n    <div className=\"UsersList\">\n      {props.users.map(user => (\n        <div\n          key={user.id || user.name}\n          className=\"UsersList__item\"\n          style={{\n            color: user.color || 'black',\n            fontWeight: user.senior ? 'bold' : undefined\n          }}\n        >\n          {user.name}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport './Button.css';\n\ninterface ButtonProps {\n  variant: 'primary' | 'secondary';\n  type?: 'submit' | 'button' | 'reset';\n  disabled?: boolean;\n  onClick?: () => void;\n  children?: React.ReactNode;\n  fullWidth?: boolean;\n}\n\nexport function Button(props: ButtonProps) {\n  const { children, onClick, variant, disabled, type, fullWidth } = props;\n\n  return (\n    <button\n      className={classNames('Button', {\n        [`Button--variant--${variant}`]: true,\n        [`Button--fullWidth`]: fullWidth\n      })}\n      onClick={onClick}\n      disabled={disabled}\n      type={type}\n    >\n      {children}\n    </button>\n  );\n}\n\nButton.defaultProps = {\n  variant: 'primary'\n};\n","import React from 'react';\nimport { Message } from './ChatAPI';\nimport { Button } from './ui/Button';\n\nconst SubmessagesList = ({\n  messages,\n  extended,\n  onClick\n}: {\n  messages: Message[];\n  extended: boolean;\n  onClick(): void;\n}) => {\n  return (\n    <div style={{ marginLeft: 20 }}>\n      {extended &&\n        messages.map(message => (\n          <MessagesListThread key={message.id} message={message} />\n        ))}\n      <div>\n        <Button onClick={onClick}>\n          {!extended\n            ? `[pokaż odpowiedzi (${messages.length})]`\n            : '[schowaj odpowiedzi]'}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\ninterface MessagesListThreadProps {\n  message: Message;\n  showSubmessages: boolean;\n  onReplyClick?(): void;\n}\n\ninterface MessagesListThreadState {\n  extended: boolean;\n}\n\nexport class MessagesListThread extends React.PureComponent<\n  MessagesListThreadProps,\n  MessagesListThreadState\n> {\n  static defaultProps = {\n    showSubmessages: true\n  };\n\n  state = {\n    extended: false\n  };\n\n  handleShowMore = () => {\n    this.setState(state => ({\n      extended: !state.extended\n    }));\n  };\n\n  render() {\n    const { message, onReplyClick, showSubmessages } = this.props;\n    const { extended } = this.state;\n    const date = new Date(message.createdAt);\n\n    return (\n      <div key={message.id || message.content}>\n        <strong\n          onClick={onReplyClick}\n          style={{\n            cursor: 'pointer'\n          }}\n        >\n          [{date.toLocaleTimeString()}]\n        </strong>{' '}\n        {message.user && (\n          <span\n            style={{\n              color: message.user.color,\n              fontWeight: message.user.senior ? 'bold' : undefined\n            }}\n          >\n            {message.user.name}:{' '}\n          </span>\n        )}\n        {message.content}\n        {showSubmessages &&\n          message.submessages &&\n          message.submessages.length > 0 && (\n            <SubmessagesList\n              messages={message.submessages}\n              extended={extended}\n              onClick={this.handleShowMore}\n            />\n          )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { MessagesListThread } from './MessagesListThread';\nimport { Message } from './ChatAPI';\n\ninterface MessagesListProps {\n  messages: Message[];\n  onReplyClick?(message: Message): void;\n}\n\nexport function MessagesList(props: MessagesListProps) {\n  return (\n    <React.Fragment>\n      {props.messages.map(message => (\n        <MessagesListThread\n          key={message.id}\n          message={message}\n          onReplyClick={() => props.onReplyClick && props.onReplyClick(message)}\n        />\n      ))}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Message } from './ChatAPI';\nimport './MessageBox.css';\nimport { MessagesListThread } from './MessagesListThread';\nimport { Button } from './ui/Button';\n\nexport interface MessageBox {\n  message: string;\n  disabled?: boolean;\n  replyTo?: Message;\n  onReplyClear?(): void;\n  onChange: (value: string) => void;\n  onSubmit: () => void;\n}\n\nfunction handleChange(\n  event: React.ChangeEvent<HTMLTextAreaElement>,\n  onChange: MessageBox['onChange']\n) {\n  if (onChange) {\n    onChange(event.target.value);\n  }\n}\n\nfunction handleSubmit(\n  event: React.FormEvent<HTMLFormElement>,\n  onSubmit: MessageBox['onSubmit']\n) {\n  event.preventDefault();\n  if (onSubmit) {\n    onSubmit();\n  }\n}\n\nexport function MessageBox(props: MessageBox) {\n  const {\n    onChange,\n    onSubmit,\n    message,\n    disabled,\n    replyTo,\n    onReplyClear\n  } = props;\n\n  return (\n    <form\n      onSubmit={event => handleSubmit(event, onSubmit)}\n      className=\"MessageBox\"\n    >\n      {replyTo && (\n        <div>\n          Odpowiadasz na{' '}\n          <Button type=\"button\" onClick={onReplyClear}>\n            (anuluj)\n          </Button>\n          <div\n            style={{\n              background: '#fff',\n              margin: '5px 0',\n              padding: '5px'\n            }}\n          >\n            <MessagesListThread message={replyTo} showSubmessages={false} />\n          </div>\n        </div>\n      )}\n\n      <textarea\n        value={message}\n        onChange={event => handleChange(event, onChange)}\n        className=\"MessageBox__textarea\"\n        disabled={disabled}\n      />\n\n      <Button type=\"submit\" disabled={disabled}>\n        Wyślij\n      </Button>\n    </form>\n  );\n}\n","import React from 'react';\nimport { Subscription } from 'rxjs';\nimport { Cell } from './ui/Cell';\nimport {\n  fetchOnlineUsers,\n  User,\n  fetchMessages,\n  Message,\n  createMessage,\n  login,\n  logout\n} from './ChatAPI';\nimport { Row } from './ui/Row';\nimport { UsersList } from './UsersList';\nimport { MessagesList } from './MessagesList';\nimport { MessageBox } from './MessageBox';\nimport { Button } from './ui/Button';\n\ninterface ChatState {\n  channelName: string;\n  currentUser: User | null;\n  onlineUsers: User[];\n  onlineUsersLoading: boolean;\n  messages: Message[];\n  messagesLoading: boolean;\n  currentMessage: string;\n  replyTo?: Message;\n}\n\nexport class Chat extends React.PureComponent<{}, ChatState> {\n  state: ChatState = {\n    channelName: 'AppUnite: #obiady',\n    currentUser: null,\n    onlineUsers: [],\n    onlineUsersLoading: true,\n    messages: [],\n    messagesLoading: true,\n    currentMessage: '',\n    replyTo: undefined\n  };\n\n  private _subscriptions: Subscription[] = [];\n\n  componentDidMount() {\n    this._subscriptions.push(\n      fetchOnlineUsers().subscribe(users => {\n        this.setState({\n          onlineUsers: users,\n          onlineUsersLoading: false\n        });\n      })\n    );\n\n    this._subscriptions.push(\n      fetchMessages().subscribe(messages => {\n        this.setState({\n          messages,\n          messagesLoading: false\n        });\n      })\n    );\n  }\n\n  componentWillUnmount() {\n    this._subscriptions.forEach(s => s.unsubscribe());\n    this._subscriptions.length = 0;\n  }\n\n  handleSendMessage = () => {\n    const { currentMessage, replyTo } = this.state;\n\n    createMessage({\n      content: currentMessage,\n      parentMessageId: replyTo ? replyTo.id : undefined\n    });\n    this.setState({\n      currentMessage: '',\n      replyTo: undefined\n    });\n  };\n\n  handleTextAreaOnChange = (value: string) => {\n    this.setState({\n      currentMessage: value\n    });\n  };\n\n  handleSignIn = () => {\n    const name = prompt('Twój nick: ', 'gość123');\n    const color = prompt('Kolor: ', 'red') || undefined;\n\n    if (name) {\n      return login({ name, color }).then(currentUser => {\n        this.setState({ currentUser });\n      });\n    }\n    alert('Podaj nick!');\n  };\n\n  handleSignOut = () => {\n    logout();\n    this.setState({ currentUser: null });\n  };\n\n  handleReplyClick = (message: Message) => {\n    this.setState({\n      replyTo: message\n    });\n  };\n\n  handleReplyClear = () => {\n    this.setState({\n      replyTo: undefined\n    });\n  };\n\n  render() {\n    const {\n      channelName,\n      onlineUsers,\n      onlineUsersLoading,\n      messages,\n      messagesLoading,\n      currentMessage,\n      currentUser,\n      replyTo\n    } = this.state;\n\n    return (\n      <div className=\"Chat\">\n        <Row>\n          <Cell header widthPercentage={70}>\n            <strong>{channelName}</strong>\n          </Cell>\n          <Cell header widthPercentage={30} textAlign=\"center\">\n            Obecni: [{onlineUsersLoading ? '...' : onlineUsers.length}]\n          </Cell>\n        </Row>\n\n        <Row>\n          <Cell widthPercentage={70} scrollable height={300}>\n            {messagesLoading ? (\n              <div>Ładowanie...</div>\n            ) : (\n              <MessagesList\n                messages={messages}\n                onReplyClick={this.handleReplyClick}\n              />\n            )}\n          </Cell>\n          <Cell widthPercentage={30} scrollable height={300}>\n            <UsersList users={onlineUsers} />\n          </Cell>\n        </Row>\n\n        <Row>\n          <Cell header widthPercentage={70}>\n            <MessageBox\n              message={currentMessage}\n              disabled={!currentUser}\n              replyTo={replyTo}\n              onReplyClear={this.handleReplyClear}\n              onChange={this.handleTextAreaOnChange}\n              onSubmit={this.handleSendMessage}\n            />\n          </Cell>\n          <Cell widthPercentage={30}>\n            {currentUser ? (\n              <Button\n                onClick={this.handleSignOut}\n                variant=\"secondary\"\n                fullWidth\n              >\n                Wyloguj się\n              </Button>\n            ) : (\n              <Button onClick={this.handleSignIn} variant=\"secondary\" fullWidth>\n                Zaloguj się\n              </Button>\n            )}\n          </Cell>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport { Chat } from './Chat';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Chat />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}