{"version":3,"sources":["ui/Cell.tsx","ui/ChatAPI.ts","ui/Row.tsx","UsersList.tsx","MessagesList.tsx","ui/Button.tsx","MessageBox.tsx","Chat.tsx","App.tsx","index.tsx"],"names":["Cell","props","react_default","a","createElement","className","classNames","Object","defineProperty","Cell--header","header","Cell--padded","padded","Cell--scrollable","scrollable","concat","textAlign","style","width","widthPercentage","height","children","defaultProps","uuid","currentUser","undefined","users$","BehaviorSubject","messages$","_addMessage","message","next","toConsumableArray","value","id","content","createdAt","Date","toString","name","color","_addUser","user","logout","Promise","resolve","reject","setTimeout","filter","u","senior","Row","UsersList","users","map","key","fontWeight","MessagesList","Fragment","messages","date","toLocaleTimeString","Button","_classNames","onClick","variant","disabled","type","fullWidth","MessageBox","onChange","onSubmit","event","preventDefault","handleSubmit","target","handleChange","Button_Button","Chat","_React$PureComponent","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","channelName","onlineUsers","onlineUsersLoading","messagesLoading","currentMessage","_subscriptions","handleSendMessage","setState","handleTextAreaOnChange","handleSignIn","prompt","objectSpread","then","alert","handleSignOut","inherits","createClass","_this2","asObservable","subscribe","forEach","s","unsubscribe","_this$state","Row_Row","Cell_Cell","UsersList_UsersList","MessageBox_MessageBox","React","PureComponent","App","Chat_Chat","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8389aefd.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './Cell.css';\n\ninterface CellProps {\n  header: boolean;\n  padded: boolean;\n  scrollable?: boolean;\n  textAlign: 'left' | 'center' | 'right';\n  widthPercentage: number;\n  height?: number;\n  children?: React.ReactNode;\n}\n\nexport function Cell(props: CellProps) {\n  return (\n    <div\n      className={classNames('Cell', {\n        'Cell--header': props.header,\n        'Cell--padded': props.padded,\n        'Cell--scrollable': props.scrollable,\n        [`Cell--textAlign-${props.textAlign}`]: props.textAlign\n      })}\n      style={{\n        width: `${props.widthPercentage}%`,\n        height: props.height\n      }}\n    >\n      {props.children}\n    </div>\n  );\n}\n\nCell.defaultProps = {\n  header: false,\n  padded: true,\n  scrollable: false,\n  textAlign: 'left'\n};\n","import { BehaviorSubject } from 'rxjs';\n\nexport interface User {\n  id: number;\n  name: string;\n  color?: string;\n  senior?: boolean;\n}\nexport interface Message {\n  id: number;\n  createdAt: string;\n  content: string;\n  name: string;\n  color?: string;\n}\n\nlet uuid = 1;\nlet currentUser: User | undefined = undefined;\n\nconst users$ = new BehaviorSubject<User[]>([]);\nconst messages$ = new BehaviorSubject<Message[]>([]);\n\nfunction _addMessage(message: { content: string }) {\n  messages$.next([\n    ...messages$.value,\n    {\n      id: ++uuid,\n      content: message.content,\n      createdAt: new Date().toString(),\n      name: currentUser!.name,\n      color: currentUser!.color\n    }\n  ]);\n}\n\nfunction _addUser(user: User) {\n  users$.next([...users$.value, user]);\n}\n\nfunction _removeUser(user: User) {\n  users$.next(users$.value.filter(u => u.id !== user.id));\n}\n\nfunction _init() {\n  setTimeout(() => {\n    _addUser({ id: ++uuid, name: 'geron' });\n    _addUser({ id: ++uuid, name: 'hit_fm', color: 'pink', senior: true });\n    _addUser({ id: ++uuid, name: 'kasienka2' });\n    _addUser({ id: ++uuid, name: 'Lady_Ann_' });\n    _addUser({ id: ++uuid, name: 'MalWINKaaa', color: 'orange', senior: true });\n  }, 1000);\n}\n\n_init();\n\nexport function fetchMessages() {\n  return messages$.asObservable();\n}\n\nexport function fetchOnlineUsers() {\n  return users$.asObservable();\n}\n\nexport function createMessage(message: { content: string }) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      _addMessage(message);\n      resolve();\n    }, 500);\n  });\n}\n\nexport function login(user: {\n  name: string;\n  color?: string;\n  senior?: boolean;\n}) {\n  return new Promise<User>((resolve, reject) => {\n    setTimeout(() => {\n      currentUser = { id: ++uuid, ...user };\n\n      _addUser(currentUser);\n      _addMessage({\n        content: `** przychodzi ${currentUser.name}...`\n      });\n\n      resolve(currentUser);\n    }, 500);\n  });\n}\n\nexport function logout() {\n  if (!currentUser) {\n    return Promise.resolve();\n  }\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (currentUser) {\n        _removeUser(currentUser);\n        _addMessage({\n          content: `** odchodzi ${currentUser.name}...`\n        });\n      }\n      resolve();\n    }, 500);\n  });\n}\n","import React from 'react';\nimport './Row.css';\n\ninterface RowProps {\n  children?: React.ReactNode;\n}\n\nexport function Row(props: { children?: React.ReactNode }) {\n  return <div className=\"Row\">{props.children}</div>;\n}\n","import React from 'react';\nimport { User } from './ui/ChatAPI';\nimport './UsersList.css';\n\ninterface UsersListProps {\n  users: User[];\n}\n\nexport function UsersList(props: UsersListProps) {\n  return (\n    <div className=\"UsersList\">\n      {props.users.map(user => (\n        <div\n          key={user.id || user.name}\n          className=\"UsersList__item\"\n          style={{\n            color: user.color || 'black',\n            fontWeight: user.senior ? 'bold' : undefined\n          }}\n        >\n          {user.name}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Message } from './ui/ChatAPI';\n\ninterface MessagesListProps {\n  messages: Message[];\n}\n\nexport function MessagesList(props: MessagesListProps) {\n  return (\n    <React.Fragment>\n      {props.messages.map(message => {\n        const date = new Date(message.createdAt);\n\n        return (\n          <div key={message.id || message.content}>\n            <strong>[{date.toLocaleTimeString()}]</strong>\n            <span style={{ color: message.color }}> {message.name}: </span>\n            {message.content}\n          </div>\n        );\n      })}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport './Button.css';\n\ninterface ButtonProps {\n  variant: 'primary' | 'secondary';\n  type?: 'submit' | 'button' | 'reset';\n  disabled?: boolean;\n  onClick?: () => void;\n  children?: React.ReactNode;\n  fullWidth?: boolean;\n}\n\nexport function Button(props: ButtonProps) {\n  const { children, onClick, variant, disabled, type, fullWidth } = props;\n\n  return (\n    <button\n      className={classNames('Button', {\n        [`Button--variant--${variant}`]: true,\n        [`Button--fullWidth`]: fullWidth\n      })}\n      onClick={onClick}\n      disabled={disabled}\n      type={type}\n    >\n      {children}\n    </button>\n  );\n}\n\nButton.defaultProps = {\n  variant: 'primary'\n};\n","import React from 'react';\nimport { Button } from './ui/Button';\nimport './MessageBox.css';\n\nexport interface MessageBox {\n  message: string;\n  onChange: (value: string) => void;\n  onSubmit: () => void;\n  disabled?: boolean;\n}\n\nfunction handleChange(\n  event: React.ChangeEvent<HTMLTextAreaElement>,\n  onChange: MessageBox['onChange']\n) {\n  if (onChange) {\n    onChange(event.target.value);\n  }\n}\n\nfunction handleSubmit(\n  event: React.FormEvent<HTMLFormElement>,\n  onSubmit: MessageBox['onSubmit']\n) {\n  event.preventDefault();\n  if (onSubmit) {\n    onSubmit();\n  }\n}\n\nexport function MessageBox(props: MessageBox) {\n  const { onChange, onSubmit, message, disabled } = props;\n\n  return (\n    <form\n      onSubmit={event => handleSubmit(event, onSubmit)}\n      className=\"MessageBox\"\n    >\n      <textarea\n        value={message}\n        onChange={event => handleChange(event, onChange)}\n        className=\"MessageBox__textarea\"\n        disabled={disabled}\n      />\n      <Button type=\"submit\" disabled={disabled}>\n        Wyślij\n      </Button>\n    </form>\n  );\n}\n","import React from 'react';\nimport { Subscription } from 'rxjs';\nimport { Cell } from './ui/Cell';\nimport {\n  fetchOnlineUsers,\n  User,\n  fetchMessages,\n  Message,\n  createMessage,\n  login,\n  logout\n} from './ui/ChatAPI';\nimport { Row } from './ui/Row';\nimport { UsersList } from './UsersList';\nimport { MessagesList } from './MessagesList';\nimport { MessageBox } from './MessageBox';\nimport { Button } from './ui/Button';\n\ninterface ChatState {\n  channelName: string;\n  currentUser: User | null;\n  onlineUsers: User[];\n  onlineUsersLoading: boolean;\n  messages: Message[];\n  messagesLoading: boolean;\n  currentMessage: string;\n}\n\nexport class Chat extends React.PureComponent<{}, ChatState> {\n  state = {\n    channelName: 'Sieradz - Nasze Radio',\n    currentUser: null,\n    onlineUsers: [],\n    onlineUsersLoading: true,\n    messages: [],\n    messagesLoading: true,\n    currentMessage: ''\n  };\n\n  private _subscriptions: Subscription[] = [];\n\n  componentDidMount() {\n    fetchOnlineUsers().subscribe(users => {\n      this.setState({\n        onlineUsers: users,\n        onlineUsersLoading: false\n      });\n    });\n\n    fetchMessages().subscribe(messages => {\n      this.setState({\n        messages,\n        messagesLoading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this._subscriptions.forEach(s => s.unsubscribe());\n    this._subscriptions.length = 0;\n  }\n\n  handleSendMessage = () => {\n    const { currentMessage } = this.state;\n\n    createMessage({ content: currentMessage });\n    this.setState({\n      currentMessage: ''\n    });\n  };\n\n  handleTextAreaOnChange = (value: string) => {\n    this.setState({\n      currentMessage: value\n    });\n  };\n\n  handleSignIn = () => {\n    const name = prompt('Twoje nick: ');\n    const color = prompt('Kolor: ', '') || undefined;\n\n    if (name) {\n      return login({ name, color }).then(currentUser => {\n        this.setState({ currentUser });\n      });\n    }\n    alert('Podaj nick!');\n  };\n\n  handleSignOut = () => {\n    logout();\n    this.setState({ currentUser: null });\n  };\n\n  render() {\n    const {\n      channelName,\n      onlineUsers,\n      onlineUsersLoading,\n      messages,\n      messagesLoading,\n      currentMessage,\n      currentUser\n    } = this.state;\n\n    return (\n      <div className=\"Chat\">\n        <Row>\n          <Cell header widthPercentage={70}>\n            <strong>{channelName}</strong>\n          </Cell>\n          <Cell header widthPercentage={30} textAlign=\"center\">\n            Obecni: [{onlineUsersLoading ? '...' : onlineUsers.length}]\n          </Cell>\n        </Row>\n\n        <Row>\n          <Cell widthPercentage={70} scrollable height={300}>\n            {messagesLoading ? (\n              <div>Ładowanie...</div>\n            ) : (\n              <MessagesList messages={messages} />\n            )}\n          </Cell>\n          <Cell widthPercentage={30} scrollable height={300}>\n            <UsersList users={onlineUsers} />\n          </Cell>\n        </Row>\n\n        <Row>\n          <Cell header widthPercentage={70}>\n            <MessageBox\n              onChange={this.handleTextAreaOnChange}\n              onSubmit={this.handleSendMessage}\n              message={currentMessage}\n              disabled={!currentUser}\n            />\n          </Cell>\n          <Cell widthPercentage={30}>\n            {currentUser ? (\n              <Button\n                onClick={this.handleSignOut}\n                variant=\"secondary\"\n                fullWidth\n              >\n                Wyloguj się\n              </Button>\n            ) : (\n              <Button onClick={this.handleSignIn} variant=\"secondary\" fullWidth>\n                Zaloguj się\n              </Button>\n            )}\n          </Cell>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport { Chat } from './Chat';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Chat />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}